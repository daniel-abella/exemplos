<?xml version="1.0" encoding="UTF-8"?>
<project name="caveat" basedir="." default="execute">

	<!-- ================================================================= -->
	<!-- Projeto Dados                                                     -->
	<!-- Copyright (c) 2007 Kyriosdata (r)                                 -->
	<!-- Fábio Nogueira de Lucena (fabio@kyriosdata.com.br)                -->
	<!--                                                                   -->
	<!-- Pré-requisitos:                                                   -->
	<!-- 1. Ambiente kad-libs instalado (veja kyrios.sourceforge.net)      -->
	<!-- 2. Variável de ambiente KAD_LIBS devidamente definida             -->
	<!-- 3. Definição da variável ECLIPSE 'KAD_LIBS'                       -->
	<!-- 4. Projeto kad-libs-1.0.0 (acompanha kad-libs)                    -->
	<!--                                                                   -->
	<!-- NÃO É PRECISO ALTERAR NADA A PARTIR DESTA LINHA                   -->
	<!-- ================================================================= -->

	<property environment="env" />
	<property name="kad.libs" value="${env.KAD_LIBS}" />

	<!-- ================================================================= -->
	<!-- Propriedades de bibliotecas do Kad                                -->
	<!-- ================================================================= -->
	<property file="${kad.libs}/kad-libs.properties" />

	<property name="src.dir" location="." />
	<property name="build.dir" location="/tmp/build" />

	<!-- ================================================================= -->
	<!-- Hibernate (classpath)                                             -->
	<!-- ================================================================= -->
	<path id="hibernate.classpath">
		<pathelement location="${hibernate.jar}" />
		<pathelement location="${h.annotations.jar}" />
		<pathelement location="${ejb3.persistence.jar}" />
		<pathelement location="${h.tools1.jar}" />
		<pathelement location="${h.tools2.jar}" />
		<pathelement location="${h.entity1.jar}" />
		<pathelement location="${h.entity2.jar}" />
		<fileset dir="${hibernate.dir}/lib" includes="*.jar" />
	</path>

	<!-- ================================================================= -->
	<!-- PERSISTENCIA (classpath)                                          -->
	<!-- ================================================================= -->
	<path id="persistencia.classpath">
		<!-- Hibernate -->
		<path refid="hibernate.classpath" />

		<!-- Driver JDBC -->
		<pathelement location="${hsqldb.jar}" />

		<!-- DbUnit -->
		<pathelement location="${dbunit.jar}" />
	</path>
	
	<!-- ================================================================= -->
	<!-- CLASSPATH (projeto)                                               -->
	<!-- ================================================================= -->
	<path id="projeto.classpath">
		<!-- persistencia -->
		<path refid="persistencia.classpath" />

		<!-- Inclui arquivos de configuração -->
		<path location="etc" />

		<!-- Classes do projeto -->
		<path location="${build.dir}" />
		
		<!-- EJB -->
		<pathelement location="lib/jboss-ejb3-all.jar"/>
		<pathelement location="lib/testng-5.4-jdk15.jar"/>
		
		<!-- JUnit -->
	    <pathelement location="${junit.jar}"/>
	</path>

	<!-- ================================================================= -->
	<!-- clean   : apaga arquivos gerados                                  -->
	<!-- compile : compila fontes                                          -->
	<!-- execute : executa classe (argumento -Dclasse=<nomeClasse>)        -->
	<!-- ================================================================= -->

	<target name="clean" description="Apaga arquivos gerados">
		<delete dir="${build.dir}" />
	</target>

	<target name="compile" description="compila arquivos .java">
		<mkdir dir="${build.dir}" />
		<javac srcdir="${src.dir}" destdir="${build.dir}">
			<classpath refid="projeto.classpath" />
		</javac>
	</target>

	<target name="execute" depends="compile" description="executa classe (-Dclasse=nomeClasse)">
		<java classname="${classe}">
			<classpath refid="projeto.classpath" />
		</java>
	</target>

	<!-- SGBD                                                              -->
	<!-- ================================================================= -->
	<!-- db-start  : inicia SGBD de desenvolvimento                        -->
	<!-- db-stop   : interrompe SGBD                                       -->
	<!-- db-client : inicia cliente para interação com SGBD                -->
	<!-- ================================================================= -->

	<target name="db-start" description="inicia HSQLDB (kyrios-teste)">
		<java classname="org.hsqldb.Server" spawn="yes" fork="yes">
			<jvmarg value="-Duser.dir=${kad.libs}" />
			<classpath>
				<pathelement path="${hsqldb.jar}" />
			</classpath>
		</java>
	</target>

	<target name="db-stop" description="finaliza HSQLDB (kyrios-teste)">
		<java classname="br.com.kyriosdata.kyshell.kystophsqldb">
			<classpath>
				<pathelement path="${kad.libs}/bin/kyTools.jar" />
				<path refid="projeto.classpath" />
			</classpath>
		</java>
	</target>

	<target name="db-client" description="Cliente HSQLDB">
		<java classname="org.hsqldb.util.DatabaseManagerSwing" spawn="yes" fork="yes">
			<arg line="-url ${database.url}" />
			<classpath>
				<pathelement path="${hsqldb.jar}" />
			</classpath>
		</java>
	</target>


	<!-- HIBERNATE                                                         -->
	<!-- ================================================================= -->
	<!-- show   : exibe esquema da unidade de persistência                 -->
	<!-- schema : exporta esquema da unidade de persistência para o SGBD   -->
	<!-- drop   : remove do SGBD esquema da unidade de persistência        -->
	<!-- ================================================================= -->
	<taskdef name="hibernatetool" classname="org.hibernate.tool.ant.HibernateToolTask" classpathref="projeto.classpath" />

	<target name="show" depends="compile" description="show schema">
		<hibernatetool destdir="${build.dir}">
			<classpath refid="projeto.classpath" />

			<jpaconfiguration persistenceunit="${ant.project.name}" />

			<hbm2ddl drop="false" create="false" export="false" format="true" />
		</hibernatetool>
	</target>

	<target name="schema" depends="compile" description="export schema">
		<hibernatetool destdir="${build.dir}">
			<classpath refid="projeto.classpath" />

			<jpaconfiguration persistenceunit="${ant.project.name}" />

			<hbm2ddl drop="true" create="true" export="true" format="true" />
		</hibernatetool>
	</target>

	<target name="drop" depends="compile" description="drop schema">
		<hibernatetool destdir="${build.dir}">
			<classpath refid="projeto.classpath" />

			<jpaconfiguration persistenceunit="${ant.project.name}" />

			<hbm2ddl drop="true" create="false" export="true" format="true" />
		</hibernatetool>
	</target>

	<!-- ================================================================= -->
	<!-- Alvos para o DBUnit                                               -->
	<!-- ================================================================= -->
	<taskdef name="dbunit" classname="org.dbunit.ant.DbUnitTask" classpathref="persistencia.classpath"/>

	<target name="db-load" description="Carrega dados para teste em SGBD">
		<dbunit driver="${database.driver_class}" supportBatchStatement="false" url="${database.url}" userid="${database.username}" password="${database.password}">
			<operation type="INSERT" src="${data}" format="xml" />
		</dbunit>
	</target>

	<target name="db-export" description="Exports the current data in the database">
		<dbunit driver="${database.driver_class}" url="${database.url}" userid="${database.username}" password="${database.password}">
			<export dest="db-export.xml" format="xml" />
		</dbunit>
	</target>

</project>
