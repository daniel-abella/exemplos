<?xml version = '1.0' encoding = 'UTF-8'?>
<?xml-stylesheet type="text/xsl" href="questoes.xslt"?>
<Avaliacao>
  <questao tipo="lógica" objetivo="10" qi="1" id="1" >
    <introducao>A linguagem de programação Java foi originalmente chamada de Oak.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="10" qi="1" id="2" >
    <introducao>Java foi originalmente projetada por James Gosling para aplicações embutidas em produtos eletrônicos.</introducao>
    <resposta valor="v" />
  </questao>
  
  <questao tipo="lógica" objetivo="11" qi="1" id="3" >
    <introducao>
    	Uma aplicação em Java deve computar os mesmos resultados em
    	todas as máquinas e em todas as implementações.
    </introducao>
    <resposta valor="f">
    	Há dependências temporais e outras questões não-determinísticas
    	que podem tornar impossível um comportamento idêntico até em um
    	mesmo ambiente. Convém considerar ainda o fato de que nem todas
    	as máquinas possuem os mesmos recursos de memória e capacidade
    	de processamente, por exemplo.
    </resposta>
  </questao>
  
  <questao tipo="lógica" objetivo="4.6" qi="1" id="4" >
    <introducao>A linguagem de programação Java é fortemente tipada (
      <it>strongly typed</it>

      )?</introducao>
    <resposta valor="v" >Toda expressão ou variável tem um tipo conhecido em tempo de compilação.</resposta>
  </questao>
  <questao tipo="lógica" objetivo="4.6" qi="1" id="5" >
    <introducao>Os tipos de Java estão divididos em tipos primitivos e tipos de referência.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="11" qi="1" id="6" >
    <introducao>Os tipos primitivos foram definidos para serem os mesmos em todas as máquinas e em todas as implementações.</introducao>
    <resposta valor="v" >Um dos princípios fundamentais de Java é a portabilidade das aplicações.</resposta>
  </questao>
  <questao tipo="lógica" objetivo="4.6" qi="1" id="7" >
    <introducao>Os tipos de referência estão divididos em: tipos de classe, tipos de interface e tipos de 
      <stmt>array</stmt>

      .</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="5.1" qi="1" id="8" >
    <introducao>Uma variável de um tipo de referência recebe valores que correspondem a objetos que são instâncias de classes ou 
      <stmt>array</stmt>

      s.</introducao>
    <resposta valor="v" >Uma variável de um tipo de referência pode também receber uma referência null.</resposta>
  </questao>
  <questao tipo="lógica" objetivo="5.1" qi="1" id="9" >
    <introducao>Uma variável de um tipo de classe pode reter a referência 
      <stmt>null</stmt>

      ou a referência para um objeto cujo tipo é do tipo da classe ou de qualquer subclasse do tipo da classe.</introducao>
    <resposta valor="v" >Está relacionada ao mecanismo de herança de Java.</resposta>
  </questao>
  <questao tipo="lógica" objetivo="5.1" qi="1" id="10" >
    <introducao>Uma variável do tipo de uma interface pode reter o valor de uma referência 
      <stmt>null</stmt>

      ou a referência para uma instância de qualquer tipo de classe que implementa a interface.</introducao>
    <resposta valor="v" >Está relacionada ao mecanismo de polimorfismo de Java.</resposta>
  </questao>
  <questao tipo="lógica" objetivo="5.1" qi="1" id="11" >
    <introducao>Uma variável de um tipo de 
      <stmt>array</stmt>

      pode reter uma referência 
      <stmt>null</stmt>

      ou a referência para um 
      <stmt>
        <stmt>array</stmt>
      </stmt>

      .</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="5.1" qi="1" id="12" >
    <introducao>Uma variável do tipo de classe 
      <stmt>Object</stmt>

      pode reter uma referência 
      <stmt>null</stmt>

      ou uma referência para qualquer objeto, seja uma instância de uma classe ou de um 
      <stmt>array</stmt>

      .</introducao>
    <resposta valor="v" >Qualquer variável do tipo referência descendem implicitamente do tipo de classe object.</resposta>
  </questao>
  <questao tipo="lógica" objetivo="5.1" qi="1" id="13" >
    <introducao>Conversão de tipo (
      <it>casting</it>) sobre tipos de referência são verificados em tempo de execução (
      <it>run time</it>

      ) para assegurar que a conversão é válida (
      <it>type safety</it>).</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="6.1" qi="1" id="14" >
    <introducao>Apenas herança simples é permitida em Java.</introducao>
    <resposta valor="v" >Herança múltipla só é permitida em interface.</resposta>
  </questao>
  <questao tipo="lógica" objetivo="6.1" qi="1" id="15" >
    <introducao>Toda classe em Java é derivada da classe 
      <stmt>Object</stmt>

      .</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="6.1" qi="1" id="16" >
    <introducao>Uma classe 
      <stmt>D</stmt>

      pode ser derivada de uma classe 
      <stmt>B1</stmt>

      e 
      <stmt>B2</stmt>

      , ou seja, 
      <stmt>class D extends B1, B2</stmt>

      é uma sentença válida em Java.</introducao>
    <resposta valor="f" >Java só aceita herança simples, mas é possível termos classes que herdam indiretamente de outras através da herança em cascata. A sentença é válida se:
      <stmt>class B1 extends B2</stmt>

      e
      <stmt>class D extends B1.</stmt>
    </resposta>
  </questao>
  <questao tipo="Lógica" objetivo="3.2" qi="1" id="17" >
    <introducao>Toda classe já contém o método
      <stmt>finalize</stmt>

      . Neste caso, toda instância desta classe, imediatamente antes de ser descartada pelo garbage collector, terá este método executado.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="18" >
    <introducao>
      <stmt>finalize</stmt>

      é uma palavra reservada de Java.</introducao>
    <resposta valor="f" >
      <stmt>Final</stmt>

      e
      <stmt>finally</stmt>

      são palavras reservadas.</resposta>
  </questao>
  <questao tipo="lógica" objetivo="6.1" qi="1" id="19" >
    <introducao>Herança múltipla de interface é permitida em Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="1.1" qi="1" id="20" >
    <introducao>
      <stmt>array</stmt>

      s são objetos criados dinamicamente.</introducao>
    <resposta valor="v" >Os arrays são criados dinamicamente, pois utilizam o operador new (aloca memória dinamicamente).</resposta>
  </questao>
  <questao tipo="lógica" objetivo="1.1" qi="1" id="21" >
    <introducao>Uma variável do tipo de classe 
      <stmt>Object</stmt>

      pode receber uma referência para um 
      <stmt>array</stmt>

      em uma atribuição.</introducao>
    <resposta valor="v" >Arrays são considerados objetos.</resposta>
  </questao>
  <questao tipo="lógica" objetivo="1.1" qi="1" id="22" >
    <introducao>Java permite 
      <stmt>array</stmt>

      s multidimensionais.</introducao>
    <resposta valor="f" >Java permite 
      <stmt>array</stmt>

      s de 
      <stmt>array</stmt>

      s, em vez de 
      <stmt>array</stmt>

      s multidimensionais.</resposta>
  </questao>
  <questao tipo="lógica" objetivo="1.1" qi="1" id="23" >
    <introducao>Java permite 
      <stmt>array</stmt>

      s de 
      <stmt>array</stmt>

      s.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="2.4" qi="1" id="24" >
    <introducao>Há três tipos de exceções (
      <it>exceptions</it>

      ) em Java: exceções verificadas (
      <it>checked</it>

      ), exceções de tempo de execução (
      <it>run-time exceptions</it>

      ) e erros (
      <it>errors</it>

      ).</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="6.1" qi="1" id="25" >
    <introducao>Objetos que são instâncias de uma classe 
      <stmt>C</stmt>

      também contêm uma instância de cada superclasse da classe 
      <stmt>C</stmt>

      .</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="6.1" qi="1" id="26" >
    <introducao>A criação de um objeto envolve a criação recursiva das instâncias de toda a hierarquia de classes desde a classe cujo objeto é criado até a classe 
      <stmt>Object</stmt>

      (raiz de todas as hierarquias de classe).</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.6" qi="1" id="27" >
    <introducao>Em Java as variáveis locais não são automaticamente iniciadas com valores predefinidos.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.6" qi="1" id="28" >
    <introducao>Programas em Java são escritos usando o conjunto de caracteres ASCII.</introducao>
    <resposta valor="f" >O conjunto de caracteres UNICODE é empregado. Veja 
      <link>http://www.unicode.org</link>

      para detalhes.</resposta>
  </questao>
  <questao tipo="lógica" objetivo="4.6" qi="1" id="29" >
    <introducao>A versão de UNICODE empregada para se escrever programas em Java é documentada na classe 
      <stmt>Character</stmt>

      .</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.6" qi="1" id="30" >
    <introducao>Embora um programa em Java seja escrito empregando-se o conjunto de caracteres UNICODE, alguns dos elementos desta linguagem estão restritos ao conjunto de caracteres ASCII (ANSI X3.4).</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.6" qi="1" id="31" >
    <introducao>Os primeiros 128 caracteres do conjunto de caracteres UNICODE são caracteres ASCII.</introducao>
    <resposta valor="v" >O conjunto de caracteres ASCII é um subconjunto dos caracteres UNICODE.</resposta>
  </questao>
  <questao tipo="lógica" objetivo="4.1" qi="1" id="32" >
    <introducao>
      <stmt>Açaí</stmt>

      , 
      <stmt>Fábio</stmt>

      e 
      <stmt>Geléia</stmt>

      são identificadores válidos em Java.</introducao>
    <resposta valor="v" >Um identificador é uma série de caracteres constituindo em letras, dígitos, sublinhados (_) e sinais de cifrão ($), que não iniciam com um dígito e não contenha nenhum espaço.</resposta>
  </questao>
  <questao tipo="lógica" objetivo="4.6" qi="1" id="33" >
    <introducao>Em comentários, embora um programa em Java seja escrito empregando o conjunto de caracteres UNICODE, os caracteres permitidos formam um subconjunto de UNICODE denominado de ASCII.</introducao>
    <resposta valor="f" >Qualquer caractere UNICODE pode ser empregado em um comentário.</resposta>
  </questao>
  <questao tipo="lógica" objetivo="4.6" qi="1" id="34" >
    <introducao>A representação em Java de uma 
      <stmt>String</stmt>

      (seqüência de caracteres) faz uso dos caracteres UNICODE não restritos àqueles que também fazem parte do conjunto ASCII.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.6" qi="1" id="35" >
    <introducao>Todo e qualquer programa em Java, mesmo que este faça uso dos caracteres UNICODE, é possível de ser escrito empregando-se apenas caracteres ASCII no código fonte deste programa.</introducao>
    <resposta valor="v" >Convém lembrar, a seqüencia 
      <stmt>\uxxxx</stmt>

      representa o caractere UNICODE cujo valor hexadecimal é xxxx.</resposta>
  </questao>
  <questao tipo="lógica" objetivo="4.6" qi="1" id="36" >
    <introducao>A seqüencia 
      <stmt>\uxxxx</stmt>

      , onde xxxx é um valor hexadecimal, representa um caractere UNICODE cuja codificação é xxxx.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="11" qi="1" id="37" >
    <introducao>Uma seqüencia de caracteres UNICODE, que representa um programa em Java, é convertida em uma seqüencia de 
      <it>token</it>

      s correspondente durante o processo de compilação de todo e qualquer programa em Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="11" qi="1" id="38" >
    <introducao>Espaços em branco e comentários em um programa em Java não apresentam nenhuma relevância para o código correspondente em 
      <it>bytecode</it>

      s.</introducao>
    <resposta valor="v" >Espaços em branco e comentários são excluídos no processo de análise léxica (descartados) e não formam 
      <it>token</it>

      s, que têm relevância sintática e semântica.</resposta>
  </questao>
  <questao tipo="lógica" objetivo="4.6" qi="1" id="39" >
    <introducao>Não é tratado como um comentário os elementos 
      <stmt>/*</stmt>

      e 
      <stmt>*/</stmt>

      quando fornecidos em uma linha que se inicia com 
      <stmt>//</stmt>

      .</introducao>
    <resposta valor="v" >Todo texto que vem depois do caracter ASCII // é ignorado.</resposta>
  </questao>
  <questao tipo="lógica" objetivo="4.6" qi="1" id="40" >
    <introducao>Quando 
      <stmt>//</stmt>

      é fornecido no interior de comentários que se iniciam por 
      <stmt>/*</stmt>

      ou 
      <stmt>/**</stmt>

      estes caracteres provocam um erro de compilação.</introducao>
    <resposta valor="f" >Todo texto que vem entre /* e */ ou /** e */ é ignorado.</resposta>
  </questao>
  <questao tipo="lógica" objetivo="4.6" qi="1" id="41" >
    <introducao>
 A literal
 <stmt>&quot;A casa /* comentario */ é bela&quot;</stmt>
 é válida.
    </introducao>
    <resposta valor="v"></resposta>
  </questao>
  <questao tipo="lógica" objetivo="4.1" qi="1" id="42" >
    <introducao>Um identificador em Java possui, no máximo, 255 caracteres.</introducao>
    <resposta valor="f" >Identificadores em Java são seqüências ilimitadas de caracteres.</resposta>
  </questao>
  <questao tipo="lógica" objetivo="4.1" qi="1" id="43" >
    <introducao>Não há limite para a quantidade de caracteres que podem fazer parte de um identificador em Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.1" qi="1" id="44" >
    <introducao>Um identificador em Java deve, necessariamente, iniciar-se por uma letra.</introducao>
    <resposta valor="f" >Um identificador pode iniciar por letras, sublinhados ou cifrão.</resposta>
  </questao>
  <questao tipo="lógica" objetivo="4.1" qi="1" id="45" >
    <introducao>Palavras reservadas (
      <it>keyword</it>

      s) de Java não podem ser empregadas como identificadores.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.1" qi="1" id="46" >
    <introducao>Um identificador em Java não pode conincidir com uma literal lógica (
      <stmt>boolean</stmt>

      ).</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.1" qi="1" id="47" >
    <introducao>Um identificador em Java não pode coincidir com a literal de referência 
      <stmt>null</stmt>

      .</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.1" qi="1" id="48" >
    <introducao>Um identificador em Java não pode coincidir com uma palavra reservada ou 
      <it>keyword</it>

      , uma literal lógica (
      <stmt>boolean</stmt>

      ) ou a literal 
      <stmt>null</stmt>

      .</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.1" qi="1" id="49" >
    <introducao>
      <stmt>strictfp</stmt>

      é um identificador válido.</introducao>
    <resposta valor="f" >
      <stmt>strictfp</stmt>

      é uma palavra reservada.</resposta>
  </questao>
  <questao tipo="lógica" objetivo="4.1" qi="1" id="50" >
    <introducao>Um identificador em Java pode conter dígitos numéricos descritos pelos caracteres de 
      <stmt>0</stmt>

      a 
      <stmt>9</stmt>

      .</introducao>
    <resposta valor="v" >O nome de um identificador não pode iniciar pelos caracteres de 0 a 9.</resposta>
  </questao>
  <questao tipo="lógica" objetivo="4.1" qi="1" id="51" >
    <introducao>As letras que podem fazer parte de um identificador em Java podem ser obtidas dentre todas aquelas que pertencem ao conjunto de caracteres UNICODE.</introducao>
    <resposta valor="v" >Um identificador pode iniciar por letras, sublinhados ou cifrão.</resposta>
  </questao>
  <questao tipo="lógica" objetivo="4.1" qi="1" id="52" >
    <introducao>O caractere $ pode fazer parte de um identificador em Java.</introducao>
    <resposta valor="v" >Deve ser de uso restrito a código fonte gerado mecanicamente ou, raramente, para se ter acesso a nomes preexistentes em sistemas legados.</resposta>
  </questao>
  <questao tipo="lógica" objetivo="4.1" qi="1" id="53" >
    <introducao>
      <stmt>String</stmt>

      é um identificador válido.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="54" >
    <introducao>
      <stmt>instanceOf</stmt>

      é uma palavra reservada (
      <it>keyword</it>

      ) em Java.</introducao>
    <resposta valor="f" >Há uma palavra reservada de grafia semelhante: 
      <stmt>instanceof</stmt>

      (com todas as letras minúsculas). Ou seja, 
      <stmt>instanceOf</stmt>

      e 
      <stmt>instanceof</stmt>

      são apenas palavras homógrafas.</resposta>
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="55" >
    <introducao>Todas as palavras reservadas (
      <it>keyword</it>

      s) em Java são escritas empregando-se exclusivamente letras minúsculas.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.1" qi="1" id="56" >
    <introducao>
      <stmt>const</stmt>

      e 
      <stmt>goto</stmt>

      seriam identificadores válidos se não fossem palavras reservadas.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.1" qi="1" id="57" >
    <introducao>Um programa em Java pode definir uma variável do tipo 
      <stmt>float</stmt>

      cujo identificador é 
      <stmt>goto</stmt>

      .</introducao>
    <resposta valor="f" >
      <stmt>go to</stmt>

      é uma palavra reservada, logo não pode se um identificador.</resposta>
  </questao>
  <questao tipo="lógica" objetivo="4.1" qi="1" id="58" >
    <introducao>Um programa em Java fazer uso de uma variável do tipo 
      <stmt>byte</stmt>

      cujo identificador é 
      <stmt>const</stmt>

      .</introducao>
    <resposta valor="f" >
      <stmt>const</stmt>

      é uma palavra reservada, logo não pode ser um identificador.</resposta>
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="59" >
    <introducao>Embora não empregados pela linguagem Java, 
      <stmt>const</stmt>

      e 
      <stmt>goto</stmt>

      são palavras reservadas (
      <it>keyword</it>

      s).</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.1" qi="1" id="60" >
    <introducao>
      <stmt>true</stmt>

      e 
      <stmt>false</stmt>

      são identificadores válidos.</introducao>
    <resposta valor="f" >
      <stmt>true</stmt>

      e
      <stmt>false</stmt>

      são palavras reservadas</resposta>
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="61" >
    <introducao>
      <stmt>include</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="f" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="62" >
    <introducao>
      <stmt>String</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="f" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="63" >
    <introducao>
      <stmt>protected</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="64" >
    <introducao>
      <stmt>throw</stmt>

      e
      <stmt>throws</stmt>

      são palavras reservadas de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="65" >
    <introducao>
      <stmt>abstract</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="66" >
    <introducao>
      <stmt>boolean</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="67" >
    <introducao>
      <stmt>break</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="68" >
    <introducao>
      <stmt>byte</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="69" >
    <introducao>
      <stmt>case</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="70" >
    <introducao>
      <stmt>catch</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="71" >
    <introducao>
      <stmt>char</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="72" >
    <introducao>
      <stmt>class</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="73" >
    <introducao>
      <stmt>const</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="74" >
    <introducao>
      <stmt>continue</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="75" >
    <introducao>
      <stmt>default</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="76" >
    <introducao>
      <stmt>do</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="77" >
    <introducao>
      <stmt>double</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="78" >
    <introducao>
      <stmt>else</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="79" >
    <introducao>
      <stmt>extends</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="80" >
    <introducao>
      <stmt>final</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="81" >
    <introducao>
      <stmt>finally</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="82" >
    <introducao>
      <stmt>float</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="83" >
    <introducao>
      <stmt>for</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="84" >
    <introducao>
      <stmt>goto</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="85" >
    <introducao>
      <stmt>if</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="86" >
    <introducao>
      <stmt>implements</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="87" >
    <introducao>
      <stmt>import</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="88" >
    <introducao>
      <stmt>instanceof</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="89" >
    <introducao>
      <stmt>int</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="90" >
    <introducao>
      <stmt>interface</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="91" >
    <introducao>
      <stmt>long</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="92" >
    <introducao>
      <stmt>native</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="93" >
    <introducao>
      <stmt>new</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="94" >
    <introducao>
      <stmt>package</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="95" >
    <introducao>
      <stmt>private</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="96" >
    <introducao>
      <stmt>protected</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="97" >
    <introducao>
      <stmt>public</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="98" >
    <introducao>
      <stmt>return</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="99" >
    <introducao>
      <stmt>short</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="100" >
    <introducao>
      <stmt>static</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="101" >
    <introducao>
      <stmt>strictfp</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="102" >
    <introducao>
      <stmt>super</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="103" >
    <introducao>
      <stmt>switch</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="104" >
    <introducao>
      <stmt>synchronized</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="105" >
    <introducao>
      <stmt>this</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="106" >
    <introducao>
      <stmt>throw</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="107" >
    <introducao>
      <stmt>throws</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="108" >
    <introducao>
      <stmt>transient</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="109" >
    <introducao>
      <stmt>try</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="110" >
    <introducao>
      <stmt>void</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="111" >
    <introducao>
      <stmt>volatile</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="112" >
    <introducao>
      <stmt>while</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="113" >
    <introducao>
      <stmt>protect</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="f" >
      <stmt>protected</stmt>

      é palavra reservada de Java.</resposta>
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="114" >
    <introducao>
      <stmt>implement</stmt>

      é palavra reservada de Java.</introducao>
    <resposta valor="f" >
      <stmt>implements</stmt>

      é palavra reservada de Java. Observe a ausência do s em implement.</resposta>
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="115" >
    <introducao>
      <stmt>super</stmt>

      não é palavra reservada de Java.</introducao>
    <resposta valor="f" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="116" >
    <introducao>
      <stmt>char</stmt>

      não é palavra reservada de Java.</introducao>
    <resposta valor="f" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="117" >
    <introducao>
      <stmt>boolean</stmt>

      não é palavra reservada de Java.</introducao>
    <resposta valor="f" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="118" >
    <introducao>
      <stmt>synchronize</stmt>

      não é palavra reservada de Java.</introducao>
    <resposta valor="v" >Não confunda com synchronized que é uma legítima palavra reservada de Java.</resposta>
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="119" >
    <introducao>
      <stmt>continue</stmt>

      não é palavra reservada de Java.</introducao>
    <resposta valor="f" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="120" >
    <introducao>
      <stmt>native</stmt>

      não é palavra reservada de Java.</introducao>
    <resposta valor="f" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="121" >
    <introducao>
      <stmt>break</stmt>

      não é palavra reservada de Java.</introducao>
    <resposta valor="f" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="122" >
    <introducao>
      <stmt>default</stmt>

      não é palavra reservada de Java.</introducao>
    <resposta valor="f" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="123" >
    <introducao>
      <stmt>transient</stmt>

      não é palavra reservada de Java.</introducao>
    <resposta valor="f" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="124" >
    <introducao>
      <stmt>volatile</stmt>

      não é palavra reservada de Java.</introducao>
    <resposta valor="f" />
  </questao>
  <questao tipo="lógica" objetivo="4.4" qi="1" id="125" >
    <introducao>
      <stmt>imports</stmt>

      não é palavra reservada de Java.</introducao>
    <resposta valor="v" >
      <stmt>import</stmt>

      que é palavra reservada.</resposta>
  </questao>
  <questao tipo="lógica" objetivo="4.6" qi="1" id="126" >
    <introducao>Em Java, uma literal é a representação em código fonte de um valor de um tipo primitivo, de um valor do tipo 
      <stmt>String</stmt>

      ou do tipo 
      <stmt>null</stmt>

      .</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.6" qi="1" id="127" >
    <introducao>Um valor do tipo 
      <stmt>String</stmt>

      é expresso em Java através de uma literal.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.6" qi="1" id="128" >
    <introducao>Uma literal inteira é do tipo long se L ou l é o sufixo empregado.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.6" qi="1" id="129" >
    <introducao>Um número decimal é um único caractere ASCII 0, cujo valor correspondente é zero, ou consiste de um dígito de 1 a 9 opcionalmente seguido por um ou mais dígitos de 0 a 9, o que representa um inteiro positivo.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.6" qi="1" id="130" >
    <introducao>Se uma literal inteira não possui o sufixo L ou l, então o valor correspondente é do tipo int.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.6" qi="1" id="131" >
    <introducao>Um numeral hexadecimal consiste dos caracteres ASCII 0x ou 0X seguidos de um ou mais dígitos hexadecimais e pode representar um valor positivo, zero, ou negativo.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.6" qi="1" id="132" >
    <introducao>Dígitos hexadecimais correspondentes aos valores decimais de 10 a 15 são representados pelos caracteres de a até f ou de A até F, inclusive.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.6" qi="1" id="133" >
    <introducao>Qualquer caractere que representa um dígito hexadecimal pode ser representado em maiúscula ou minúscula.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.6" qi="1" id="134" >
    <introducao>Um número na representação octal consiste de um dígito ASCII 0 seguido de um ou mais dígito de 0 até 7, inclusive.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.6" qi="1" id="135" >
    <introducao>Um número octal pode representar um valor positivo, zero ou negativo.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.6" qi="1" id="136" >
    <introducao>A literal 00 é um valor decimal.</introducao>
    <resposta valor="f" >O único número decimal que se inicia com 0 é o de valor zero, representado por este único caractere.</resposta>
  </questao>
  <questao tipo="lógica" objetivo="4.6" qi="1" id="137" >
    <introducao>A literal 01 é o octal correspondente ao valor 1 em decimal.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.6" qi="1" id="138" >
    <introducao>A literal 02 é o octal correspondente ao valor 2 em decimal.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.6" qi="1" id="139" >
    <introducao>A literal 03 é o octal correspondente ao valor 3 em decimal.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.6" qi="1" id="140" >
    <introducao>A literal 04 é o octal correspondente ao valor 4 em decimal.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.6" qi="1" id="141" >
    <introducao>A literal 05 é o octal correspondente ao valor 5 em decimal.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.6" qi="1" id="142" >
    <introducao>A literal 06 é o octal correspondente ao valor 6 em decimal.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.6" qi="1" id="143" >
    <introducao>A literal 07 é o octal correspondente ao valor 7 em decimal.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.6" qi="1" id="144" >
    <introducao>A literal 08 é o octal correspondente ao valor 8 em decimal.</introducao>
    <resposta valor="f" >08 é uma literal inválida. O decimal 8 é representado simplesmente pelo caractere 8. Observe que 8 é um caractere inválido para uma literal que representa um valor na representação octal.</resposta>
  </questao>
  <questao tipo="lógica" objetivo="4.6" qi="1" id="145" >
    <introducao>Qualquer valor em octal é formado por pelo menos dois caracteres, sendo que o primeiro deles é 0.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.6" qi="1" id="146" >
    <introducao>As literais 0, 00 e 0x0 representam todas, o valor inteiro zero. A primeira na representação decimal, a segunda na octal e a terceira na representação hexadecimal.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.6" qi="1" id="147" >
    <introducao>A maior literal decimal do tipo int é 2 elevado a 31 (2147483648). Qualquer valor entre 0 e 2147483647 pode ser empregado onde uma literal do tipo int é esperada.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.6" qi="1" id="148" >
    <introducao>A literal 2 elevado a 31 só pode ser empregada como o operando do operador unário de negação (-).</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.6" qi="1" id="149" >
    <introducao>Se uma literal na representação hexadecimal ou octal não possível de ser armazenada em 32 bits, então a tentativa de atribuição de tal literal a uma variável do tipo int provoca um erro em tempo de compilação.</introducao>
    <resposta valor="v" />
  </questao>
  <questao tipo="lógica" objetivo="4.6" qi="1" id="150" >
    <introducao>Uma literal ponto-flutuante é do tipo <it>float</it> se possui o sufixo ASCII f ou F.</introducao>
    <resposta valor="v" />
  </questao>
</Avaliacao>
