<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><TITLE>Introdu&ccedil;&atilde;o &agrave; Ci&ecirc;ncia da Computa&ccedil;&atilde;o (UFG)</TITLE>
<META http-equiv="content-type" content="text/html; charset=iso-8859-1">
<META content="MSHTML 6.00.2800.1170" name=GENERATOR></HEAD>
<BODY>
<TABLE width=600 border=1 cellPadding=0 cellSpacing=0 bordercolor="#000066">
  <TBODY>
  <TR>
    <TD>
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
              <TD><A href="http://www.inf.ufg.br"><img src="images/icone-icc3.gif" width="600" height="70"></A></TD>
            </TR>
        <TR>
          <TD>
            <CENTER>
            <TABLE cellSpacing=0 cellPadding=0 width="95%" border=0>
              <TBODY>
              <TR>
                        <TD><p><b><font size="3" face="Verdana,Arial,helvetica,sans-serif"><br>
                            </font></b><FONT
                  face=Verdana,Arial,helvetica,sans-serif
                  size=3><b>Uni&atilde;o entre <em>threads</em></b></FONT></p>
                          <p><font size="2" face="Verdana, Arial, Helvetica, sans-serif">Um 
                            <em>thread </em>A pode esperar pelo t&eacute;rmino 
                            da execu&ccedil;&atilde;o de um <em>thread </em>B 
                            ao enviar a mensagem <font face="Courier New, Courier, mono">join()</font> 
                            ao <em>thread </em>B. Quando tal mensagem &eacute; 
                            enviada, o <em>thread </em>A sai do estado <strong>executando 
                            </strong>e vai para o estado <strong>bloqueado</strong>. 
                            Permanecer&aacute; neste estado at&eacute; que o <em>thread 
                            </em>B termine a execu&ccedil;&atilde;o do m&eacute;todo 
                            <font face="Courier New, Courier, mono">run()</font>, 
                            o que conduz o <em>thread </em> B ao estado <strong>morto</strong>. 
                            Neste momento, o <em>thread </em>A, que aguardava 
                            por esta condi&ccedil;&atilde;o, torna-se novamente 
                            <strong>execut&aacute;vel</strong> e, quando escolhido 
                            para execu&ccedil;&atilde;o, prossegue normalmente. 
                            </font></p>
                          <p><font size="2" face="Verdana, Arial, Helvetica, sans-serif">O 
                            programa abaixo ilustra o emprego do m&eacute;todo 
                            <font face="Courier New, Courier, mono">join()</font>. 
                            O <em>thread </em>correspondente ao programa cria 
                            um <em>thread </em>que realiza uma longa opera&ccedil;&atilde;o 
                            com o prop&oacute;sito de obter o valor de Pi. O c&aacute;lculo 
                            deste valor &eacute; esperado pelo m&eacute;todo <font face="Courier New, Courier, mono">main</font> 
                            logo ap&oacute;s parte de uma mensagem ser impressa 
                            atrav&eacute;s da invoca&ccedil;&atilde;o do m&eacute;todo 
                            <font face="Courier New, Courier, mono">join()</font>. 
                            Quando o retorno &eacute; produzido pelo <em>thread 
                            </em>criado, o m&eacute;todo <font face="Courier New, Courier, mono">main</font> 
                            completa a mensagem a ser impressa com o valor de 
                            Pi e termina.</font><font face="Verdana, Arial, Helvetica, sans-serif" dir="ltr" lang="pt"></font></p>
                          <pre><font size="2" face="Courier New, Courier, mono">public class Uniao extends Thread {
    double valorDePi = 0.0; 

    public void run() {  // M&eacute;todo &quot;lento&quot; para c&aacute;lculo de Pi
        double d = -1;<br>        int s = -1;<br>        double p = 0.0;<br>        for (long i = 0; i &lt; (long) 1E+12; i++) {<br>            d += 2;<br>            s *= -1;<br>            p += s / d;<br>        }<br>        valorDePi = 4 * p;<br>    }

    public static void main(String[] args) {
        Uniao tu = new Uniao();
        tu.start();  // Muitas atividades a serem realizadas!
        System.out.println(&quot;Calculando o valor de Pi. Aguarde ...&quot;);     

        try {
            tu.join();  // Aguarde pelo c&aacute;lculo de pi
        } catch (InterruptedException ex) {
        }

        System.out.printf(&quot;Pi obtido: %f&quot;, tu.valorDePi);
    }
}</font></pre> 
                          <HR SIZE=1>
                          <script language="JavaScript" src="rodape.js" type="text/JavaScript"></script>
                          <b><font size="3" face="Verdana,Arial,helvetica,sans-serif"><br>
                          </font></b> 
                          <HR SIZE=1>
                  <BR></TD></TR></TBODY></TABLE></CENTER></TD></TR></TBODY></TABLE></TD></TR>
  <TR>
      <TD bgColor=#000066><IMG height=25 width=1 
  border=0></TD>
    </TR></TBODY></TABLE> 
<BR>
<FONT face="Verdana, Arial, Helvetica, sans-serif"
size=-2>Assinantes podem interromper o recebimento destes informes atrav&eacute;s 
da altera&ccedil;&atilde;o de suas <A
href="https://www.inf.ufg.br">prefer&ecirc;ncias.<br>
</A>Se voc&ecirc; recebe gratuitamente tais informa&ccedil;&otilde;es, ent&atilde;o 
realize o <A
href="http://www.inf.ufg.br">descadastramento</A>.<br>
Para requisitar o recebimento, fa&ccedil;a o <A
href="http://www.inf.ufg.br">cadastramento</A>. Outras quest&otilde;es, envie 
e-mail para <A
href="mailto:icc@inf.ufg.br">icc@inf.ufg.br</A>.<BR>
<BR></FONT>
</BODY> </HTML>