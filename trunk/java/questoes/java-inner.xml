<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="questoes.xslt"?>
<Avaliacao xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="questoes.xsd">
	<identificacao>
		<titulo>Linguagem de Programação Java</titulo>
		<copyright>Fábio Nogueira de Lucena</copyright>
		<versao>1.0</versao>
	</identificacao>
	<historico>
		<vento data="2003-10-07">
			<comentario>Atingido o total de 2071 questões!</comentario>
		</vento>
	</historico>
	<questao id="0" objetivo="1.2">
		<introducao>Classes "internas" (<it>inner classes</it>) são classes definidas dentro, no interior de outras classes.
	</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>Uma classe pode ser declarada como "membro de outra classe" (<it>inner class</it>).
	</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>Assim como uma classe pode conter variáveis e métodos, também pode conter outras classes como membros.
	</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>Uma classe interna (<it>inner</it>) é parte da classe na qual está declarada. Código da classe interna tem acesso aos membros da classe na qual está declarada.
	</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>A declaração <stmt>class Externa { class Interna {} }</stmt> é válida.
	</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>A única possibilidade de se ter acesso a uma classe interna (<it>inner</it>) é através de uma instancia da classe mais externa, ou classe na qual a classe interna foi declarada.
	</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>Para criar uma instancia de uma classe interna (<it>inner</it>) é necessário uma instancia da classe na qual a classe interna foi declarada.
	</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>Se <stmt>obj</stmt> é uma referencia para uma instancia de uma classe interna (<it>inner</it>), então existe um outro objeto, instancia da classe mais externa associada ao objeto <stmt>obj</stmt>.
	</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>O código abaixo compila satisfatoriamente.<java><![CDATA[class Externa {
    class Interna {
        public void imprime() {
            System.out.println(x);
        }
    }
    final int x = 2;
}]]></java>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>A saída produzida pela execução do programa abaixo é <stmt>2</stmt>.<java><![CDATA[class Externa {
    class Interna {
        public void imprime() {
            System.out.println(x);
        }
    }
    final int x = 2;
}

public class Inner2 {
    public static void main(String[] args) {
        Externa e = new Externa();
        Externa.Interna i = e.new Interna();
        i.imprime();
    }
}]]></java>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>A sentença <stmt>ref = new Externa().new Interna();</stmt> é válida caso a variável <stmt>ref</stmt> seja do tipo <stmt>Externa.Interna</stmt>.
	</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>A sentença <stmt>new Externa().new Interna().fazAlgo();</stmt> é válida para uma declaração de uma classe <stmt>Externa</stmt> na qual é declarada a classe interna <stmt>Interna</stmt> que contém um método público <stmt>fazAlgo()</stmt>.
	</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>O código abaixo não compila.<java><![CDATA[public class Inner3 {
    public Interna i;

    class Interna {
        Interna() {
            System.out.println("Interna ...");
        }

        public void fazAlgo() {
            System.out.println(i);
        }
    }

    public Inner3() {
        i = this.new Interna();
    }

    public static void main(String[] args) {
        Inner3 ref = new Inner3();
        Inner3.Interna refII = ref.i;
        refII.fazAlgo();
    }
}]]></java>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>A execução do programa abaixo gera uma exceção.<java><![CDATA[public class Inner3 {
    public Interna i;

    class Interna {
        Interna() {
            System.out.println("Interna ...");
        }

        public void fazAlgo() {
            System.out.println(i);
        }
    }

    public Inner3() {
        i = this.new Interna();
    }

    public static void main(String[] args) {
        Inner3 ref = new Inner3();
        Inner3.Interna refII = ref.i;
        refII.fazAlgo();
    }
}]]></java>
		</introducao>
		<resposta valor="f">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>Criar uma instancia de uma classe interna (<it>inner</it>) por código contido na classe mais externa é tão simples como os demais casos de criação de uma instancia. Código que não está contido na classe mais externa ou que está contido e, neste caso, é declarado <stmt>static</stmt>, necessariamente deve fazer uso de uma referencia ao objeto mais externo para que uma instancia da classe interna possa ser criada.
	</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>A palavra reservada <stmt>this</stmt> não pode ser empregada em um método declarado <stmt>static</stmt>.
	</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>O código abaixo compila.<java><![CDATA[public class Inner4 {
    class Interna {
        public void fazAlgo() {
            System.out.println(this);
        }
    }
    
    public static void main(String[] args) {
        new Inner4().new Interna().fazAlgo();
    }
}]]></java>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>O código abaixo não compila.<java><![CDATA[public class Inner4 {
    class Interna {
        public void fazAlgo() {
            System.out.println(this);
            Inner4.this.fazAlgo();
        }
    }
    
    public void fazAlgo() {
        System.out.println(this);
    }
    
    public static void main(String[] args) {
        new Inner4().new Interna().fazAlgo();
    }
}]]></java>
		</introducao>
		<resposta valor="f">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>O código abaixo compila satisfatoriamente.<java><![CDATA[public class Inner4 {
    class Interna {
        public void fazAlgo() {
            System.out.println(this);
            Inner4.fazAlgo();
        }
    }
    
    public static void fazAlgo() {
        System.out.println();
    }
    
    public static void main(String[] args) {
        new Inner4().new Interna().fazAlgo();
    }
}]]></java>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>Em código no interior de uma classe interna, a palavra reservada <stmt>this</stmt> faz referencia ao objeto desta classe interna.
	</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>Para referenciar o objeto de uma classe externa por código no interior de uma classe interna (<it>inner</it>), deve-se fazer uso do nome da classe mais externa, seguida de um '.' que é seguido de <stmt>this</stmt>.
	</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>O código abaixo compila.<java><![CDATA[public class Inner6 {
    class Interna {
        public void fazAlgo() {
            System.out.println("fazAlgo()");
        }
    }
    
    public static void main(String[] args) {
        Inner6 i = new Inner6();
        Inner6.Interna ii = i.new Interna();
        ii.fazAlgo();
    }
}]]></java>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>A saída produzida pela execução do código abaixo é <stmt>fazAlgo()</stmt>.<java><![CDATA[public class Inner6 {
    class Interna {
        public void fazAlgo() {
            System.out.println("fazAlgo()");
        }
    }
    
    public static void main(String[] args) {
        Inner6 i = new Inner6();
        Inner6.Interna ii = i.new Interna();
        ii.fazAlgo();
    }
}]]></java>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>O código abaixo compila.<java><![CDATA[public class Inner7 {
    abstract class OkAbstrato {
        public abstract void ok();
    }
    
    class Ok extends OkAbstrato {
        public void ok() {
            System.out.println("OK");
        }
    }
    
    public static void main(String[] args) {
        Inner7.OkAbstrato refOk = new Inner7().new Ok();
        refOk.ok();
    }
}]]></java>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>O código abaixo compila satisfatoriamente.<java><![CDATA[public class Inner8 {
    final class OkAbstrato {
        public void ok() {}
    }
    
    class Ok extends Object {
        public void ok() {
            System.out.println("OK");
        }
    }
    
    public static void main(String[] args) {
        new Inner8().new Ok().ok();
    }
}]]></java>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>O código abaixo não compila.<java><![CDATA[public class Inner9 {
    public interface Ferramenta {
        public String getNome();
    }
    
    public static void fazAlgo(Ferramenta f) {
        System.out.println(f.getNome());
    }
    
    public static void main(String[] args) {
        fazAlgo(new Ferramenta() {
            public String getNome() {
                return "Ferramenta";
            }
        });
    }
}]]></java>
		</introducao>
		<resposta valor="f">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>A execução do código abaixo produz como saída <stmt>Ferramenta</stmt>.<java><![CDATA[public class Inner9 {
    public interface Ferramenta {
        public String getNome();
    }
    
    public static void fazAlgo(Ferramenta f) {
        System.out.println(f.getNome());
    }
    
    public static void main(String[] args) {
        fazAlgo(new Ferramenta() {
            public String getNome() {
                return "Ferramenta";
            }
        });
    }
}]]></java>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>O código abaixo não compila.<java><![CDATA[public class Inner10 {
    public static void fazAlgo() {
        final int x = 2;
        final int y = 3;
        
        class FazAlgo {
            public void faz() {
                System.out.println("faz " + x + y);
            }
        }
        
        FazAlgo fa = new FazAlgo();
        fa.faz();
    }
    
    public static void main(String[] args) {
        fazAlgo();
    }
}]]></java>
		</introducao>
		<resposta valor="f">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>Quando executado, o código abaixo gera uma exceção.<java><![CDATA[public class Inner10 {
    public static void fazAlgo() {
        final int x = 2;
        final int y = 3;
        
        class FazAlgo {
            public void faz() {
                System.out.println("faz " + x + y);
            }
        }
        
        FazAlgo fa = new FazAlgo();
        fa.faz();
    }
    
    public static void main(String[] args) {
        fazAlgo();
    }
}]]></java></introducao>
		<resposta valor="f">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>Quando executado, o código abaixo produz como saída <stmt>faz 5</stmt>.<java><![CDATA[public class Inner10 {
    public static void fazAlgo() {
        final int x = 2;
        final int y = 3;
        
        class FazAlgo {
            public void faz() {
                System.out.println("faz " + x + y);
            }
        }
        
        FazAlgo fa = new FazAlgo();
        fa.faz();
    }
    
    public static void main(String[] args) {
        fazAlgo();
    }
}]]></java></introducao>
		<resposta valor="f">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>Quando executado, o código abaixo gera como saída <stmt>faz 23</stmt>.<java><![CDATA[public class Inner10 {
    public static void fazAlgo() {
        final int x = 2;
        final int y = 3;
        
        class FazAlgo {
            public void faz() {
                System.out.println("faz " + x + y);
            }
        }
        
        FazAlgo fa = new FazAlgo();
        fa.faz();
    }
    
    public static void main(String[] args) {
        fazAlgo();
    }
}]]></java></introducao>
		<resposta valor="f">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>Não é possível declarar uma classe no interior de um método.
	</introducao>
		<resposta valor="f">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>A criação de objetos de uma classe declarada no interior de um método só é possível por código do método em questão e após a declaração da classe.
	</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>Uma classe declarada no interior de um método não pode fazer uso das variáveis declaradas neste método, exceto se a declaração da variável for <stmt>final</stmt>.
	</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>O código abaixo não compila.<java><![CDATA[public class Inner11 {
    int valor = 1;

    public void fazAlgo() {
        final int x = 2;

        class FazAlgo {
            public void faz() {
                System.out.println("faz " + x + Inner11.this.valor);
            }
        }

        FazAlgo fa = new FazAlgo();
        fa.faz();
    }

    public static void main(String[] args) {
        new Inner11().fazAlgo();
    }
}]]></java>
		</introducao>
		<resposta valor="f">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>A execução do código abaixo produz como saída <stmt>faz 21</stmt>.<java><![CDATA[public class Inner11 {
    int valor = 1;

    public void fazAlgo() {
        final int x = 2;

        class FazAlgo {
            public void faz() {
                System.out.println("faz " + x + Inner11.this.valor);
            }
        }

        FazAlgo fa = new FazAlgo();
        fa.faz();
    }

    public static void main(String[] args) {
        new Inner11().fazAlgo();
    }
}]]></java>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>Os únicos modificadores que podem ser aplicados a classes declaradas no interior de métodos é <stmt>abstract</stmt> e <stmt>final</stmt>. Nunca ambos ao mesmo tempo.
	</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>Uma classe interna (<it>inner</it>), por exemplo, a classe <stmt>Interna</stmt>, na declaração <stmt>class Externa { class Interna {} }</stmt>, pode ter como modificadores, uma combinação legal de <stmt>final</stmt>, <stmt>abstract</stmt>, <stmt>public</stmt>, <stmt>protected</stmt>, <stmt>private</stmt> e <stmt>static</stmt>.
	</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>Uma classe anonima interna (<it>inner</it>) pode estender uma classe ou, exclusivamente, implementar uma interface.
	</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>Uma classe anonima interna (<it>inner</it>) pode implementar uma única interface e, se este for o caso, não poderá estender outra classe senão a classe <stmt>Object</stmt>.
	</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>O código abaixo não compila.<java><![CDATA[public class Inner12 {
    public interface Interface {}
    
    public static void fazAlgo(Object obj) {
        System.out.println("feito.");
    }
    
    public static void main(String[] args) {
        fazAlgo(new Interface() {});
    }
}]]></java>
		</introducao>
		<resposta valor="f">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>A execução do código abaixo gera uma exceção.<java><![CDATA[public class Inner12 {
    public interface Interface {}
    
    public static void fazAlgo(Object obj) {
        System.out.println("feito.");
    }
    
    public static void main(String[] args) {
        fazAlgo(new Interface() {});
    }
}]]></java>
		</introducao>
		<resposta valor="f">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>Não é possível definir um construtor para uma classe anonima.
	</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>Uma classe declarada no interior de outra classe com o modificador <stmt>static</stmt> não é exatamente uma classe interna (<it>inner</it>). De fato, não é necessário uma instancia da classe mais externa para que uma da classe declarada <stmt>static</stmt> seja criada.
	</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>Criar um objeto de uma classe declarada no interior de outra com o modificador <stmt>static</stmt> exige o emprego do nome da classe mais externa seguido do nome da classe aninhada como em <stmt>Externa.Interna</stmt>.
	</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>Se a classe <stmt>Interna</stmt> é declarada <stmt>static</stmt> no interior da classe <stmt>Externa</stmt>, então a criação de um objeto da classe <stmt>Interna</stmt> pode ser realizada pela sentença <stmt>new Externa.Interna();</stmt> onde é obrigatório a presença do nome da classe mais externa, caso a criação ocorra além das fronteiras da classe <stmt>Externa</stmt>.
	</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>O código abaixo não compila.<java><![CDATA[public class Inner13 {
    public interface I {
    }

    static class Interna extends Object implements I {
        public static void quaseNada() {
            System.out.println("nada");
        }
    }

    public static void main(String[] args) {
        Inner13.Interna.quaseNada();
    }
}]]></java>
		</introducao>
		<resposta valor="f">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>O código abaixo compila satisfatoriamente.<java><![CDATA[public class Inner13 {
    public interface I {
    }

    static class Interna extends Object implements I {
        public static void quaseNada() {
            System.out.println("quase nada");
        }
    }

    public static void main(String[] args) {
        Interna.quaseNada();
    }
}]]></java>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>O código abaixo não compila.<java><![CDATA[public class Inner14 {
    public interface I {
    }

    static class Interna extends Object implements I {
        public void quaseNada() {
            System.out.println("quase nada");
        }
    }

    public static void main(String[] args) {
        new Interna().quaseNada();
        Inner14.Interna ii = new Inner14.Interna();
        ii.quaseNada();
    }
}]]></java>
		</introducao>
		<resposta valor="f">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>A saída produzida pelo código abaixo é <stmt>quase nada</stmt> seguido, na linha posterior, novamente por <stmt>quase nada</stmt>.<java><![CDATA[public class Inner14 {
    public interface I {
    }

    static class Interna extends Object implements I {
        public void quaseNada() {
            System.out.println("quase nada");
        }
    }

    public static void main(String[] args) {
        new Interna().quaseNada();
        Inner14.Interna ii = new Inner14.Interna();
        ii.quaseNada();
    }
}]]></java>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>Uma classe aninhada, declarada no interior de outra classe com o modificador <stmt>static</stmt>, não pode fazer acesso a membros da classe mais externa que não sejam declarados <stmt>static</stmt>.
	</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>O código abaixo não compila.<java><![CDATA[public class Inner15 {
    int x = 1;
    static class Interna {
        public void thisExterno(Inner15 ref) {
            System.out.println(ref);
        }
    }
    
    public static void main(String[] args) {
        new Interna().thisExterno(new Inner15());
    }
}]]></java>
		</introducao>
		<resposta valor="f">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>O código abaixo compila satisfatoriamente.<java><![CDATA[public class Inner16 {
    public int getNumero() {
        return 1;
    }
    
    static class Interna {
        public void thisExterno(Inner16 ref) {
            System.out.println(ref.getNumero());
        }
    }

    public static void main(String[] args) {
        new Interna().thisExterno(new Inner16() {});
        new Interna().thisExterno(new Inner16() {
            public int getNumero() {
                return 2;
            }
        });            
    }
}]]></java>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>Quando executado, o código abaixo produz como saída os valores <stmt>1</stmt> e <stmt>2</stmt>, cada um em uma linha.<java><![CDATA[public class Inner16 {
    public int getNumero() {
        return 1;
    }
    
    static class Interna {
        public void thisExterno(Inner16 ref) {
            System.out.println(ref.getNumero());
        }
    }

    public static void main(String[] args) {
        new Interna().thisExterno(new Inner16() {});
        new Interna().thisExterno(new Inner16() {
            public int getNumero() {
                return 2;
            }
        });            
    }
}]]></java>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
	<questao id="0" objetivo="1.2">
		<introducao>
		</introducao>
		<resposta valor="v">
		</resposta>
	</questao>
</Avaliacao>
