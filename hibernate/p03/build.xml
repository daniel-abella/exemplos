<?xml version="1.0" encoding="UTF-8"?>
<project name="p03" basedir="." default="execute">

	<!-- ================================================================= -->
	<!-- Define 'kad.libs' (repositório de bibliotecas do Kad)                    -->
	<!-- ================================================================= -->
	<property environment="env" />
	<property name="kad.libs" value="${env.KAD_LIBS}" />

	<!-- ================================================================= -->
	<!-- Propriedades de bibliotecas do Kad                                -->
	<!-- ================================================================= -->
	<property file="${kad.libs}/kad-libs.properties" />

	<property name="src.dir" location="." />
	<property name="build.dir" location="/tmp/ch" />

	<!-- ================================================================= -->
	<!-- CLASSPATH (bibliotecas e diretórios necessários para Hibernate    -->
	<!-- ================================================================= -->
	<path id="projeto.classpath">
		<pathelement location="${hibernate.jar}" />
		<pathelement location="${hsqldb.jar}" />
		<fileset dir="${hibernate.dir}/lib" includes="*.jar" />
		<path location="${build.dir}" />

		<!-- Inclui arquivos de configuração -->
		<path location="${ant.project.name}" />
	</path>

	<!-- Executa classe conforme comando no formato fornecido abaixo: -->
	<!-- ant -Dclasse=<nome-da-classe> execute                        -->
	<target name="execute" depends="compile" description="executa classe (-Dclasse=nomeClasse)">
		<java classname="${classe}">
			<classpath refid="projeto.classpath" />
		</java>
	</target>

	<target name="compile" description="compila arquivos .java">
		<mkdir dir="${build.dir}" />
		<javac srcdir="${src.dir}" destdir="${build.dir}">
			<classpath refid="projeto.classpath" />
		</javac>
	</target>

	<target name="clean" description="Apaga arquivos gerados">
		<delete dir="${build.dir}" />
	</target>

	<target name="db-start" description="inicia SGBD (kyrios-teste)">
		<java classname="org.hsqldb.Server" spawn="yes" fork="yes">
			<jvmarg value="-Duser.dir=${kad.libs}" />
			<classpath>
				<pathelement path="${hsqldb.jar}" />
			</classpath>
		</java>
	</target>

	<target name="db-manager" description="inicia HSQLDB manager (cliente SQL)">
		<java classname="org.hsqldb.util.DatabaseManagerSwing" spawn="yes" fork="yes">
			<arg line="-url jdbc:hsqldb:hsql://localhost/kyrios-teste" />
			<classpath>
				<pathelement path="${hsqldb.jar}" />
			</classpath>
		</java>
	</target>

	<target name="db-show" depends="compile">
		<java classname="org.hibernate.tool.hbm2ddl.SchemaExport">
			<arg line="--output=${build.dir}/sql.ddl --text --format --config=hibernate.cfg.xml" />
			<classpath refid="projeto.classpath" />
		</java>
	</target>

	<target name="db-schema" depends="compile" description="cria esquema (V2)">
		<java classname="org.hibernate.tool.hbm2ddl.SchemaExport">
			<arg line="--output=${build.dir}/sql.ddl --format --config=hibernate.cfg.xml" />
			<classpath refid="projeto.classpath" />
		</java>
	</target>

	<target name="db-drop" depends="compile">
		<java classname="org.hibernate.tool.hbm2ddl.SchemaExport">
			<arg line="--output=${build.dir}/sql.ddl --drop --config=hibernate.cfg.xml" />
			<classpath refid="projeto.classpath" />
		</java>
	</target>

	<!-- ================================================================= -->
	<!-- Alvos para o DBUnit                                               -->
	<!-- ================================================================= -->
	<target name="db-load" description="Carrega dados para teste em SGBD">
		<!-- Se o SGBD é o SQL Server, então operation recebe MSSQL_CLEAN_INSERT -->
		<!-- Apenas CLEAN_INSERT é usado para os demais SGBDS                    -->
		<condition property="operation" value="MSSQL_CLEAN_INSERT" else="CLEAN_INSERT">
			<equals arg1="${database.type}" arg2="sqlserver" />
		</condition>

		<property name="file" value="test/data/sample-data.xml" />

		<dbunit driver="${database.driver_class}" supportBatchStatement="false" url="${database.url}" userid="${database.username}" password="${database.password}">
			<operation type="${operation}" src="${file}" format="xml" />
		</dbunit>
	</target>

	<target name="db-export" description="Exports the current data in the database">
		<dbunit driver="${database.driver_class}" url="${database.url}" userid="${database.username}" password="${database.password}">
			<export dest="db-export.xml" format="xml" />
		</dbunit>
	</target>

</project>
